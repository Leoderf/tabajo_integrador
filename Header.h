#pragma once.

#include <iostream>
#include <windows.h>

using namespace std;
//COORD GetConsoleCursorPosition(HANDLE hConsoleOutput)
//{

	//CONSOLE_SCREEN_BUFFER_INFO cbsi;
	//if (GetConsoleScreenBufferInfo(hConsoleOutput, &cbsi))
	//{
	//	return cbsi.dwCursorPosition;
	//}
	//{
		// The function failed. Call GetLastError() for details.
		//COORD invalid = { 0, 0 };
		//return invalid;
	//}
//}
class Ente {

protected:
	int vida;
	int puntaje;
	int posX, posY;
	int RosX, RosY;
	int newPosX, newPosY;
	int action;

public:
	int getNewPosX() { return newPosX; }
	int getNewPosY() { return newPosY; }
	int getPosX() { return posX; }
	int getPosY() { return posY; }


public:

	void gotoxy(int x, int y) {
		HANDLE hcon;
		COORD dwPos = { x, y };

		hcon = GetStdHandle(STD_OUTPUT_HANDLE);

		dwPos.X = x;
		dwPos.Y = y;
		SetConsoleCursorPosition(hcon, dwPos);
	}

	


};


class Jugador : public Ente {

public:
	Jugador();
	void draw();
	void getJugadorAction();
	void eatFood(  );
	bool move();
	int getPlayerPoints();
	int getNewPosX();
	int getNewPosY();
	int getPosX();
	int getPosY();

	

protected:
	int vida;
	int puntaje;
	int posX, posY;
	int newPosX, newPosY;
	int action;

	


private:
	void limpiaPosicionJugador();
	void setPlayerPoints(int puntos);


};

class Fantasma : public Ente {
public:
	Fantasma();
	void draw();
	bool move();
	void getAction();
	int getNewPosX();
	int getNewPosY();
	int getPosX();
	int getPosY();

private:
	int vida;
	int puntaje;
	int RosX, RosY;
	int newPosX;
	int newPosY;
	int newRosX;
	int newRosY;
	int action;
	void limpiaPosicion();
	

};


class Comida {

public:
	Comida();
	int getPuntos();

private:
	int punto;
	int posX;
	int posY;
	

	//	bool Ifcollision();
	
//	void draw();
};

class mundo {
	
public:
	int posX;
	int posY;
	int newPosX;
	int newRosY;
	//char mapa[30][130];
	char mapa[30][130] = { "........................................................................................................................",
					"........................................................................................................................",
					".........@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@......................................................",
					".........@  *                       @@@@                      *  @......................................................",
					".........@  @@@@@@@@@  @@@@@@@@@@@  @@@@  @@@@@@@@@@@  @@@@@@@@  @......................................................",
					".........@  @@@@@@@@@  @@@@@@@@@@@  @@@@  @@@@@@@@@@@  @@@@@@@@  @......................................................",
					".........@                                                       @......................................................",
					".........@  @@@@@@@@@  @@  @@@@@@@@@@@@@@@@@@@@@@  @@  @@@@@@@@  @......................................................",
					".........@             @@           @@@@           @@            @......................................................",
					".........@@@@@@@@@@@@  @@@@@@@@@@@  @@@@  @@@@@@@@@@@  @@@@@@@@@@@......................................................",
					".........@@@@@@@@@@@@  @@@@@@@@@@@  @@@@  @@@@@@@@@@@  @@@@@@@@@@@......................................................",
					".........@@@@@@@@@@@@* @@                          @@ *@@@@@@@@@@@......................................................",
					".........@@@@@@@@@@@@  @@  @@@@@@@@       @@@@@@@  @@  @@@@@@@@@@@......................................................",
					".........@@@@@@@@@@@@      @                    @      @@@@@@@@@@@......................................................",
					".........@@@@@@@@@@@@  @@  @                    @  @@  @@@@@@@@@@@......................................................",
					".........@@@@@@@@@@@@  @@  @@@@@@@@@@@@@@@@@@@@@@  @@  @@@@@@@@@@@......................................................",
					".........@@@@@@@@@@@@* @@                          @@ *@@@@@@@@@@@......................................................",
					".........@@@@@@@@@@@@  @@  @@@@@@@@@@@@@@@@@@@@@@  @@  @@@@@@@@@@@......................................................",
					".........@                         @@@@                          @......................................................",
					".........@  @@@@@@@@@  @@@@@@@@@@  @@@@  @@@@@@@@@@@@  @@@@@@@@  @......................................................",
					".........@         @@                                  @@        @......................................................",
					".........@@@@@@@@  @@  @@@   @@@@@@@@@@@@@@@@@@  @@@   @@  @@@@@@@......................................................",
					".........@             @@@         @@@@          @@@             @......................................................",
					".........@  @@@@@@@@@@@@@@@@@@@@@  @@@@  @@@@@@@@@@@@@@@@@@@@@   @......................................................",
					".........@  *                                                *   @......................................................",
					".........@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@......................................................",
					"........................................................................................................................",
					"........................................................................................................................",
					"........................................................................................................................",
					"........................................................................................................................" };

	mundo();

	void draw();
	int IsCollition(int posX,int posY);
	void removeFood(int posX, int posY);
	
	int IsCollition2(int newPosX, int newRosY);
};































